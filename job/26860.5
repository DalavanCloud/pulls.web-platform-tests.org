
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Job 26860.5 details</title>
    <link rel=stylesheet href="../static/css/bootstrap.min.css">
    <link rel="stylesheet" href="../static/css/custom.css">
  </head>
  <body class="container">
    <div class="page-header">
      <h1>
        Job 26860.5
        
          <small>
            for build
            <a href="../build/26860">26860</a>
            in pull request
            <a href="../pull/10311">10311</a>
          </small>
        
      </h1>
      
        <h2>
          Chrome Dev
        </h2>
        <p><a href="https://travis-ci.org/w3c/web-platform-tests/$1s/362266185">View on TravisCI</a></p>
      
    </div>

    
      <dl>
        <div class="row">
          <div class="col-xs-4">
            <dt>Status</dt>
            <dd class="label label-success">PASSED</dd>
          </div>
          <div class="col-xs-4">
            <dt>Started</dt>
            <dd>None</dd>
          </div>
          <div class="col-xs-4">
            
          </div>
        </div>
      </dl>

      
      
        
        <h3>All Results</h3>
        
          
        
          
        
          
            <details>
              <summary><code>/custom-elements/htmlconstructor/newtarget.html</code></summary>
              
                <table class="table">
                  <thead>
                    <tr>
                      <th>Subtest</th>
                      <th>Results</th>
                      <th>Messages</th>
                    </tr>
                  </thead>
                  <tbody>
                    
                      
                    
                      
                    
                      
                    
                      
                    
                      
                    
                      
                    
                      
                    
                      
                    
                      
                    
                      
                    
                      
                    
                      
                    
                      
                    
                      
                    
                      
                    
                      
                    
                      
                    
                      
                        <tr>
                          <td><code>HTMLParagraphElement constructor must not get .prototype until it finishes its extends sanity checks, calling proxy constructor directly</code></td>
                          <td>
                            
                              FAIL: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                                
                                  <code>assert_equals: Should never have gotten .prototype expected 0 but got 1</code><br />
                                
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                        <tr>
                          <td><code>HTMLParagraphElement constructor must not get .prototype until it finishes its extends sanity checks, calling via Reflect</code></td>
                          <td>
                            
                              FAIL: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                                
                                  <code>assert_equals: Should never have gotten .prototype expected 0 but got 1</code><br />
                                
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                        <tr>
                          <td><code>If prototype is not object (5), derives the fallback from NewTarget&#39;s realm (autonomous custom elements)</code></td>
                          <td>
                            
                              PASS: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                        <tr>
                          <td><code>If prototype is not object (5), derives the fallback from NewTarget&#39;s realm (customized built-in elements)</code></td>
                          <td>
                            
                              PASS: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                        <tr>
                          <td><code>If prototype is not object (null), derives the fallback from NewTarget&#39;s realm (autonomous custom elements)</code></td>
                          <td>
                            
                              PASS: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                        <tr>
                          <td><code>If prototype is not object (null), derives the fallback from NewTarget&#39;s realm (customized built-in elements)</code></td>
                          <td>
                            
                              PASS: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                        <tr>
                          <td><code>If prototype is not object (string), derives the fallback from NewTarget&#39;s realm (autonomous custom elements)</code></td>
                          <td>
                            
                              PASS: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                        <tr>
                          <td><code>If prototype is not object (string), derives the fallback from NewTarget&#39;s realm (customized built-in elements)</code></td>
                          <td>
                            
                              PASS: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                        <tr>
                          <td><code>If prototype is not object (undefined), derives the fallback from NewTarget&#39;s realm (autonomous custom elements)</code></td>
                          <td>
                            
                              PASS: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                        <tr>
                          <td><code>If prototype is not object (undefined), derives the fallback from NewTarget&#39;s realm (customized built-in elements)</code></td>
                          <td>
                            
                              PASS: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                        <tr>
                          <td><code>Rethrow any exceptions thrown while getting the prototype</code></td>
                          <td>
                            
                              PASS: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                        <tr>
                          <td><code>Use NewTarget&#39;s prototype, not the one stored at definition time</code></td>
                          <td>
                            
                              PASS: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                            
                          </td>
                        </tr>
                      
                    
                  </tbody>
                </table>
              
            </details>
          
        
          
            <details>
              <summary><code>/custom-elements/HTMLElement-constructor.html</code></summary>
              
                <table class="table">
                  <thead>
                    <tr>
                      <th>Subtest</th>
                      <th>Results</th>
                      <th>Messages</th>
                    </tr>
                  </thead>
                  <tbody>
                    
                      
                        <tr>
                          <td><code>Custom element constructor must throw TypeError when it does not extend HTMLElement</code></td>
                          <td>
                            
                              PASS: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                        <tr>
                          <td><code>Custom element constructor must throw TypeError when it does not extend the proper element interface</code></td>
                          <td>
                            
                              PASS: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                    
                      
                    
                      
                        <tr>
                          <td><code>HTMLElement constructor must allow subclassing a custom element</code></td>
                          <td>
                            
                              PASS: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                        <tr>
                          <td><code>HTMLElement constructor must allow subclassing an user-defined subclass of HTMLElement</code></td>
                          <td>
                            
                              PASS: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                        <tr>
                          <td><code>HTMLElement constructor must infer the tag name from the element interface</code></td>
                          <td>
                            
                              PASS: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                        <tr>
                          <td><code>HTMLElement constructor must not get .prototype until it finishes its extends sanity checks, calling proxy constructor directly</code></td>
                          <td>
                            
                              FAIL: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                                
                                  <code>assert_equals: Should never have gotten .prototype expected 0 but got 1</code><br />
                                
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                        <tr>
                          <td><code>HTMLElement constructor must not get .prototype until it finishes its extends sanity checks, calling via Reflect</code></td>
                          <td>
                            
                              FAIL: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                                
                                  <code>assert_equals: Should never have gotten .prototype expected 0 but got 1</code><br />
                                
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                        <tr>
                          <td><code>HTMLElement constructor must not get .prototype until it finishes its registration sanity checks, calling proxy constructor directly</code></td>
                          <td>
                            
                              FAIL: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                                
                                  <code>assert_equals: Should never have gotten .prototype expected 0 but got 1</code><br />
                                
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                        <tr>
                          <td><code>HTMLElement constructor must not get .prototype until it finishes its registration  sanity checks, calling via Reflect</code></td>
                          <td>
                            
                              FAIL: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                                
                                  <code>assert_equals: Should never have gotten .prototype expected 0 but got 1</code><br />
                                
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                        <tr>
                          <td><code>HTMLElement constructor must only get .prototype once, calling proxy constructor directly</code></td>
                          <td>
                            
                              FAIL: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                                
                                  <code>assert_equals: Should have gotten .prototype once expected 1 but got 2</code><br />
                                
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                        <tr>
                          <td><code>HTMLElement constructor must only get .prototype once, calling proxy constructor via Reflect</code></td>
                          <td>
                            
                              FAIL: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                                
                                  <code>assert_equals: Should have gotten .prototype once expected 1 but got 2</code><br />
                                
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                        <tr>
                          <td><code>HTMLElement constructor must only get .prototype once, calling proxy constructor via Reflect with no inheritance</code></td>
                          <td>
                            
                              FAIL: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                                
                                  <code>assert_equals: Should have gotten .prototype once expected 1 but got 2</code><br />
                                
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                        <tr>
                          <td><code>HTMLElement constructor must throw a TypeError when NewTarget is equal to itself</code></td>
                          <td>
                            
                              PASS: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                        <tr>
                          <td><code>HTMLElement constructor must throw a TypeError when NewTarget is equal to itself via a Proxy object</code></td>
                          <td>
                            
                              PASS: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                        <tr>
                          <td><code>HTMLElement constructor must throw TypeError when it has not been defined by customElements.define</code></td>
                          <td>
                            
                              PASS: 10<br />
                            
                          </td>
                          <td>
                            
                              
                              
                            
                          </td>
                        </tr>
                      
                    
                      
                    
                      
                    
                      
                    
                      
                    
                      
                    
                      
                    
                      
                    
                      
                    
                      
                    
                      
                    
                      
                    
                      
                    
                  </tbody>
                </table>
              
            </details>
          
        
          
        
          
        
          
        
          
        
          
        
          
        
          
        
          
        
          
        
          
        
          
        
          
        
          
        
          
        
          
        
          
        
          
        
          
        
          
        
          
        
          
        
          
        
          
        
          
        
          
        
      
    
    <script src="../static/js/jquery-3.2.1.min.js"></script>
    <script src="../static/js/bootstrap.min.js"></script>
  </body>
</html>